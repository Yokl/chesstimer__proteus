
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	code1.asm
	Object File:	code1.hex
	List File:	code1.lst



 Line  I  Addr  Code            Source

    1:		N      0000	org 0h
    2:	  0000	02 00 30		jmp start
    3:
    4:
    5:		N      0030	org 30h
    6:	  0030			start:
    7:	  0030	74 00			mov a,#0h
    8:	  0032	F8			mov r0,a		; обнуление r0
    9:	  0033	74 00			mov a,#0h
   10:	  0035	F9			mov r1,a		; обнуление r1
   11:	  0036	74 04			mov a,#4h
   12:	  0038	FA			mov r2,a		; обнуление r2
   13:	  0039	74 00			mov a,#0h
   14:	  003B	FB			mov r3,a		; обнуление r3
   15:	  003C	C2 86			clr P0.6		; сброс бита порта P0.6
   16:	  003E	C2 95			clr P1.5		; сброс бита порта P1.5
   17:	  0040	C2 96			clr P1.6		; сброс бита порта P1.6
   18:	  0042	C2 97			clr P1.7		; сброс бита порта P1.7
   19:	  0044	C2 A7			clr P2.7		; сброс бита порта P2.7
   20:	  0046	C2 A0			clr P2.0		; сброс бита порта P2.0
   21:	  0048	C2 A1			clr P2.1		; сброс бита порта P2.1
   22:	  004A	C2 A2			clr P2.2		; сброс бита порта P2.2
   23:	  004C	75 F0 01		mov B,#1		; B=1 - "хожу я"
   24:	  004F	12 00 E4	nn8:	call show1		; вызов процедуры show1 (отображение)
   25:	  0052	20 A0 14		jb P2.0, n1 		; кнопка "старт" первого микроконтроллёра
   26:	  0055	20 A1 0E		jb P2.1, nn9 		; кнопка "старт" второго микроконтроллёра
   27:	  0058	20 A2 02		jb P2.2, nn10 		; увеличение времени на 10 минут
   28:	  005B	80 F2			jmp nn8 		; ожидание старта
   29:	  005D	E8		nn10:	mov a,r0		; загружаем десятки минут
   30:	  005E	24 01			add a,#1h 		; прибавляем десятки минут
   31:	  0060	F8			mov r0,a
   32:	  0061	20 A2 FD	nn11:	jb P2.2,nn11 		; цикл до момента отжатия кнопки
   33:	  0064	80 E9			jmp nn8 		; возвращение к началу цикла
   34:	  0066	75 F0 00	nn9:	mov B,#0		; B=0 - хожу не я
   35:	  0069	7C 05		n1:	mov r4,#5; 		; внутренний цикл обновления цифр на экране
   36:	  006B	7D 32		nn2:	mov r5,#50;		; r4+r5 = 5*50
   37:	  006D	12 00 E4	nn3:	call show1		; вызов процедуры show1 (отображение)
   38:	  0070	DD FB			djnz r5,nn3		; повторение цикла по r5 (50)
   39:	  0072	DC F7			djnz r4,nn2		; повторение цикла по r4 (5)
   40:
   41:	  0074	30 97 07	b1:	jnb P1.7, b2 		; мигалка-переключатель сведодиодов
   42:	  0077	C2 97			clr P1.7		; если горит Р1.7 - выключаем его
   43:	  0079	D2 96			setb P1.6		; и включаем P1.6

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  007B	02 00 85		jmp b3
   45:	  007E	30 96 04	b2:	jnb P1.6, b3		; если горит P1.6
   46:	  0081	C2 96			clr P1.6		; выключаем его
   47:	  0083	D2 97			setb P1.7		; и включаем P1.7
   48:	  0085			b3:
   49:	  0085	E5 F0			mov a, B		; загружаем регистр B
   50:	  0087	B4 01 DF		cjne a,#1,n1		; если он равен 1, то време не идёт
   51:	  008A	EB			mov a,r3		; загружаем r3 (секунды)
   52:	  008B	B4 00 05		cjne a,#0h,ra1 		; если = 0 то
   53:	  008E	7B 09			mov r3,#9h		; меняем на 9
   54:	  0090	02 00 A9		jmp ra2			; и переходим менять десятки секунд
   55:	  0093	94 01		ra1:	subb a,#1		; если не = 0, то вычитаем 1
   56:	  0095	FB			mov r3,a		; проверяем 15 секунд
   57:	  0096	B4 05 D0		cjne a,#5h,n1		; секунды = 5
   58:	  0099	EA			mov a,r2
   59:	  009A	B4 01 CC		cjne a,#1h,n1		; десятки секунд = 1
   60:	  009D	E9			mov a,r1
   61:	  009E	B4 00 C8		cjne a,#0h,n1		; минуты = 0
   62:	  00A1	E8			mov a,r0
   63:	  00A2	B4 00 C4		cjne a,#0h,n1		; десятки минут = 0
   64:	  00A5	D2 97			setb P1.7		; если всё так - зажигаем светодиод
   65:	  00A7	80 C0			jmp n1			; возвращаемся в начало цикла
   66:	  00A9	EA		ra2:	mov a,r2		; загружаем десятки секунд
   67:	  00AA	B4 00 05		cjne a,#0h,ra3 		; если = 0 то
   68:	  00AD	7A 05			mov r2,#5h		; меняем на 5
   69:	  00AF	02 00 B7		jmp ra4			; и переходим менять минуты
   70:	  00B2	94 01		ra3:	subb a,#1		; если не = 0, то вычитаем 1
   71:	  00B4	FA			mov r2,a
   72:	  00B5	80 B2			jmp n1			; и возвращаемся в начало цикла
   73:	  00B7	E9		ra4:	mov a,r1		; загружаем минуты
   74:	  00B8	B4 00 09		cjne a,#0h,ra5 		; если = 0
   75:	  00BB	79 09			mov r1,#9h		; то минуты = 9
   76:	  00BD	7B 09			mov r3,#9h		; секунды = 9
   77:	  00BF	7A 05			mov r2,#5h		; десятки секунд = 5
   78:	  00C1	02 00 CD		jmp ra6			; переходим менять десятки минут
   79:	  00C4	94 01		ra5:	subb a,#1		; если не = 0, то вычитаем 1
   80:	  00C6	F9			mov r1,a		; устанавливаем минуты
   81:	  00C7	7B 09			mov r3,#9h		; секунды = 9
   82:	  00C9	7A 05			mov r2,#5h		; десятки секунд = 5
   83:	  00CB	80 9C			jmp n1			; возвращаемся в начало цикла
   84:	  00CD	E8		ra6:	mov a,r0 		; загрудаем десятки минут
   85:	  00CE	B4 00 08		cjne a,#0h,ra7		; если = 0 то
   86:	  00D1	79 00			mov r1,#0h		; все цифры равны нулю
   87:	  00D3	7A 00			mov r2,#0h		; и это больше не меняется
   88:	  00D5	7B 00			mov r3,#0h
   89:	  00D7	80 90			jmp n1			; возвращаемся в начало цикла
   90:	  00D9	94 01		ra7:	subb a,#1		; если не = 0, то вычитаем 1
   91:	  00DB	F8			mov r0,a		; устанавливаем десятки минут
   92:	  00DC	79 09			mov r1,#9h		; минуты = 9
   93:	  00DE	7A 05			mov r2,#5h		; десятки секунд = 5
   94:	  00E0	7B 09			mov r3,#9h		; секунды = 9
   95:	  00E2	80 85			jmp n1			; возвращаемся в начало цикла
   96:
   97:	  00E4			show1:
   98:	  00E4	C2 91			clr P1.1		; очищаем регистры 1,2,3
   99:	  00E6	C2 92			clr P1.2

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:	  00E8	C2 93			clr P1.3
  101:	  00EA	D2 90			setb P1.0		; устанавливаем регистр первой цифры
  102:	  00EC	E8			mov a,r0		; загружаем десятки минут
  103:	  00ED	12 01 2B		call compABCD		; подбираем двоичное значение
  104:	  00F0	F5 B0			mov P3,a		; выводим первой цифрой
  105:	  00F2	12 01 76		call delay1		; выполняем задержку
  106:	  00F5	C2 90			clr P1.0		; очищаем регистры 0,2,3
  107:	  00F7	C2 92			clr P1.2
  108:	  00F9	C2 93			clr P1.3
  109:	  00FB	D2 91			setb P1.1		; устанавливаем регистр второй цифры
  110:	  00FD	E9			mov a,r1		; загружаем минуты
  111:	  00FE	12 01 2B		call compABCD		; подбираем двоичное значение
  112:	  0101	F5 B0			mov P3,a		; выводим второй цифрой
  113:	  0103	C2 B0			clr P3.0		; устанавливаем бит "запятой-разделителя"
  114:	  0105	12 01 76		call delay1		; выполняем задержку
  115:	  0108	C2 90			clr P1.0		; очищаем регистры 0,1,3
  116:	  010A	C2 91			clr P1.1
  117:	  010C	C2 93			clr P1.3
  118:	  010E	D2 92			setb P1.2		; устанавливаем регистр третьей цифры
  119:	  0110	EA			mov a,r2		; загружаем десятки секунды
  120:	  0111	12 01 2B		call compABCD		; подбираем двоичное значение
  121:	  0114	F5 B0			mov P3,a		; выводим третьей цифрой
  122:	  0116	12 01 76		call delay1		; выполняем задержку
  123:	  0119	C2 90			clr P1.0		; очищаем регистры 0,1,2
  124:	  011B	C2 91			clr P1.1
  125:	  011D	C2 92			clr P1.2
  126:	  011F	D2 93			setb P1.3		; устанавливаем регистр четвёртой цифры
  127:	  0121	EB			mov a,r3		; загружаем секунды
  128:	  0122	12 01 2B		call compABCD		; подбираем двоичное значение
  129:	  0125	F5 B0			mov P3,a		; выводим четвёртой цифрой
  130:	  0127	12 01 76		call delay1		; выполняем задержку
  131:	  012A	22			ret			; возврат
  132:
  133:	  012B			compABCD:
  134:	  012B	B4 01 05		cjne a,#1h,pa1		; сравниваем с 1
  135:	  012E	74 9F			mov a,#10011111b	; соответствующее двоичное значение
  136:	  0130	02 01 75		jmp paB			; переходим на возврат
  137:	  0133	B4 02 05	pa1:	cjne a,#2h,pa2		; сравниваем с 2
  138:	  0136	74 25			mov a,#00100101b	; соответствующее двоичное значение
  139:	  0138	02 01 75		jmp paB
  140:	  013B	B4 03 05	pa2:	cjne a,#3h,pa3		; сравниваем с 3
  141:	  013E	74 0D			mov a,#00001101b	; соответствующее двоичное значение
  142:	  0140	02 01 75		jmp paB
  143:	  0143	B4 04 05	pa3:	cjne a,#4h,pa4		; сравниваем с 4
  144:	  0146	74 99			mov a,#10011001b	; соответствующее двоичное значение
  145:	  0148	02 01 75		jmp paB
  146:	  014B	B4 05 05	pa4:	cjne a,#5h,pa5		; сравниваем с 5
  147:	  014E	74 49			mov a,#01001001b	; соответствующее двоичное значение
  148:	  0150	02 01 75		jmp paB
  149:	  0153	B4 06 05	pa5:	cjne a,#6h,pa6		; сравниваем с 6
  150:	  0156	74 41			mov a,#01000001b	; соответствующее двоичное значение
  151:	  0158	02 01 75		jmp paB
  152:	  015B	B4 07 05	pa6:	cjne a,#7h,pa7		; сравниваем с 7
  153:	  015E	74 1F			mov a,#00011111b	; соответствующее двоичное значение
  154:	  0160	02 01 75		jmp paB
  155:	  0163	B4 08 05	pa7:	cjne a,#8h,pa8		; сравниваем с 8

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:	  0166	74 01			mov a,#00000001b	; соответствующее двоичное значение
  157:	  0168	02 01 75		jmp paB
  158:	  016B	B4 09 05	pa8:	cjne a,#9h,pa9		; сравниваем с 9
  159:	  016E	74 09			mov a,#00001001b	; соответствующее двоичное значение
  160:	  0170	02 01 75		jmp paB
  161:	  0173	74 03		pa9:	mov a,#00000011b	; 0, если другие значения не подошли
  162:	  0175			paB:
  163:	  0175	22			ret			; возврат
  164:
  165:	  0176			delay1:
  166:
  167:	  0176	7E 02		M1:	mov r6,#2		; загружем значения задержки
  168:	  0178	7F 64		M2:	mov r7,#100		; r6+r7 = 2*100 - задержка между
  169:	  017A	DF FE		M3:	djnz r7,M3		; выводами цифр на дисплей
  170:	  017C	DE FA			djnz r6,M2
  171:	  017E	30 95 03		jnb P1.5, M4		; если нажата кнопка моего хода
  172:	  0181	75 F0 00		mov B,#0		; то ставим значение остановки времени
  173:	  0184	20 A7 01	M4:	jb P2.7, M5		; если нажата кнопка его хода
  174:	  0187	22			ret
  175:	  0188	75 F0 01	M5:	mov B,#1		; то ставим значение запуска времени
  176:	  018B	22			ret
  177:				END





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
B1				  CODE	    0074	  41
B2				  CODE	    007E	  45
B3				  CODE	    0085	  48
COMPABCD			  CODE	    012B	 133
CY				  BIT	      D7
DELAY1				  CODE	    0176	 165
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
M1				  CODE	    0176	 167
M2				  CODE	    0178	 168
M3				  CODE	    017A	 169
M4				  CODE	    0184	 173
M5				  CODE	    0188	 175
N1				  CODE	    0069	  35
NN10				  CODE	    005D	  29
NN11				  CODE	    0061	  32
NN2				  CODE	    006B	  36
NN3				  CODE	    006D	  37
NN8				  CODE	    004F	  24
NN9				  CODE	    0066	  34
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PA1				  CODE	    0133	 137
PA2				  CODE	    013B	 140

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PA3				  CODE	    0143	 143
PA4				  CODE	    014B	 146
PA5				  CODE	    0153	 149
PA6				  CODE	    015B	 152
PA7				  CODE	    0163	 155
PA8				  CODE	    016B	 158
PA9				  CODE	    0173	 161
PAB				  CODE	    0175	 162
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RA1				  CODE	    0093	  55
RA2				  CODE	    00A9	  66
RA3				  CODE	    00B2	  70
RA4				  CODE	    00B7	  73
RA5				  CODE	    00C4	  79
RA6				  CODE	    00CD	  84
RA7				  CODE	    00D9	  90
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SHOW1				  CODE	    00E4	  97
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
START				  CODE	    0030	   6
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
WR				  BIT	      B6
